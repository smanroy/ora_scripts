##############################################################
### Simple shell script to check for DataGuard status  #######
### Features : 									                   ###########
###			i	RAC Aware		   				                   ###########
### 		ii Alerts if DR site is out of sync	       ###########
###            for more than 15 minutes.		       ###########
### Platform: AIX only							               ###########
### Tested Version: 11.2.0.3 and 11.2.0.4		       ###########
### Author: Saurabh Manroy						             ###########
##############################################################
#!/usr/bin/ksh
export ORACLE_SID=`ps -ef | grep ora_pmon | grep -v grep | awk -F "_" '{print $NF}'`
export ORACLE_HOME=`ps -ef | grep ora_pmon | grep -v grep | awk '{print $2}' | xargs ps ewww | tr ' ' '\n' | grep ORACLE_HOME | awk -F "=" '{print $2}'`
export PATH=$ORACLE_HOME/bin:$PATH
IFS='
'
ROLE=`sqlplus -s / as sysdba <<EOF
set head off feedback off
select database_role from v\\$database;
exit
EOF`
DB_ROLE=`echo $ROLE | tr -d '\n'`
if [[ $DB_ROLE == "PRIMARY" ]] ; then
GAP=`sqlplus -s / as sysdba <<EOF
set head off feedback off echo off trimout on
with gap_tab as
(select inst_id,
	extract(DAY from (scn_to_timestamp(current_scn) -(select scn_to_timestamp(applied_scn) from gv\\$archive_dest b where dest_id=2 and a.inst_id=b.inst_id))) "DAY",
	extract(HOUR from (scn_to_timestamp(current_scn) -(select scn_to_timestamp(applied_scn) from gv\\$archive_dest b where dest_id=2 and a.inst_id=b.inst_id))) "HOUR",
	extract(MINUTE from (scn_to_timestamp(current_scn) -(select scn_to_timestamp(applied_scn) from gv\\$archive_dest b where dest_id=2 and a.inst_id=b.inst_id))) "MIN" from gv\\$database a)
select
case 
when DAY <> 0 then
'DR Site out of sync for '||DAY ||' day(s) and '||HOUR||' hour(s) and '||MIN||' minute(s) from production instance# ' ||inst_id
when HOUR <> 0 then
'DR Site out of sync for '||HOUR||' hour(s) and '||MIN||' minute(s) from production instance# ' ||inst_id
when MIN > 15 then
'DR Site out of sync for '||MIN||' minute(s) from production instance# ' ||inst_id
end
from gap_tab order by 1;
exit;
EOF`
if [[ -n $GAP ]] ; then
for x in $GAP
do
echo "Alarm $x"
done
fi
fi
